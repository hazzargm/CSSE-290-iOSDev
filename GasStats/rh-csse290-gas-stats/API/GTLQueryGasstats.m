/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2015 Google Inc.
 */

//
//  GTLQueryGasstats.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   gasstats/v1
// Description:
//   GasStats API
// Classes:
//   GTLQueryGasstats (24 custom class methods, 9 custom properties)

#import "GTLQueryGasstats.h"

#import "GTLGasstatsCar.h"
#import "GTLGasstatsCarCollection.h"
#import "GTLGasstatsDriver.h"
#import "GTLGasstatsDriverCollection.h"
#import "GTLGasstatsEpaCar.h"
#import "GTLGasstatsEpaCarCollection.h"
#import "GTLGasstatsGasStat.h"
#import "GTLGasstatsGasStatCollection.h"
#import "GTLGasstatsTankRecord.h"
#import "GTLGasstatsTankRecordCollection.h"

@implementation GTLQueryGasstats

@dynamic carId, entityKey, fields, limit, make, order, pageToken, userId, year;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map =
    [NSDictionary dictionaryWithObjectsAndKeys:
      @"car_id", @"carId",
      @"user_id", @"userId",
      nil];
  return map;
}

#pragma mark -
#pragma mark "car" methods
// These create a GTLQueryGasstats object.

+ (id)queryForCarDeleteWithEntityKey:(NSString *)entityKey {
  NSString *methodName = @"gasstats.car.delete";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.entityKey = entityKey;
  query.expectedObjectClass = [GTLGasstatsCar class];
  return query;
}

+ (id)queryForCarInsertWithObject:(GTLGasstatsCar *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gasstats.car.insert";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLGasstatsCar class];
  return query;
}

+ (id)queryForCarList {
  NSString *methodName = @"gasstats.car.list";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsCarCollection class];
  return query;
}

#pragma mark -
#pragma mark "car.list.by" methods
// These create a GTLQueryGasstats object.

+ (id)queryForCarListByUser {
  NSString *methodName = @"gasstats.car.list.by.user";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsCarCollection class];
  return query;
}

#pragma mark -
#pragma mark "driver" methods
// These create a GTLQueryGasstats object.

+ (id)queryForDriverDeleteWithEntityKey:(NSString *)entityKey {
  NSString *methodName = @"gasstats.driver.delete";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.entityKey = entityKey;
  query.expectedObjectClass = [GTLGasstatsDriver class];
  return query;
}

+ (id)queryForDriverInsertWithObject:(GTLGasstatsDriver *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gasstats.driver.insert";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLGasstatsDriver class];
  return query;
}

+ (id)queryForDriverList {
  NSString *methodName = @"gasstats.driver.list";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsDriverCollection class];
  return query;
}

#pragma mark -
#pragma mark "epacar" methods
// These create a GTLQueryGasstats object.

+ (id)queryForEpacarDeleteWithEntityKey:(NSString *)entityKey {
  NSString *methodName = @"gasstats.epacar.delete";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.entityKey = entityKey;
  query.expectedObjectClass = [GTLGasstatsEpaCar class];
  return query;
}

+ (id)queryForEpacarInsertWithObject:(GTLGasstatsEpaCar *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gasstats.epacar.insert";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLGasstatsEpaCar class];
  return query;
}

+ (id)queryForEpacarList {
  NSString *methodName = @"gasstats.epacar.list";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsEpaCarCollection class];
  return query;
}

#pragma mark -
#pragma mark "epacar.list.by" methods
// These create a GTLQueryGasstats object.

+ (id)queryForEpacarListByYear {
  NSString *methodName = @"gasstats.epacar.list.by.year";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsEpaCarCollection class];
  return query;
}

#pragma mark -
#pragma mark "epacar.list.by.year" methods
// These create a GTLQueryGasstats object.

+ (id)queryForEpacarListByYearMake {
  NSString *methodName = @"gasstats.epacar.list.by.year.make";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsEpaCarCollection class];
  return query;
}

#pragma mark -
#pragma mark "gasstat" methods
// These create a GTLQueryGasstats object.

+ (id)queryForGasstatDeleteWithEntityKey:(NSString *)entityKey {
  NSString *methodName = @"gasstats.gasstat.delete";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.entityKey = entityKey;
  query.expectedObjectClass = [GTLGasstatsGasStat class];
  return query;
}

+ (id)queryForGasstatInsertWithObject:(GTLGasstatsGasStat *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gasstats.gasstat.insert";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLGasstatsGasStat class];
  return query;
}

+ (id)queryForGasstatList {
  NSString *methodName = @"gasstats.gasstat.list";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsGasStatCollection class];
  return query;
}

#pragma mark -
#pragma mark "gasstat.list.by" methods
// These create a GTLQueryGasstats object.

+ (id)queryForGasstatListByCar {
  NSString *methodName = @"gasstats.gasstat.list.by.car";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsGasStatCollection class];
  return query;
}

#pragma mark -
#pragma mark "gasstat.list.by.car" methods
// These create a GTLQueryGasstats object.

+ (id)queryForGasstatListByCarUser {
  NSString *methodName = @"gasstats.gasstat.list.by.car.user";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsGasStatCollection class];
  return query;
}

#pragma mark -
#pragma mark "gasstat.list.by" methods
// These create a GTLQueryGasstats object.

+ (id)queryForGasstatListByUser {
  NSString *methodName = @"gasstats.gasstat.list.by.user";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsGasStatCollection class];
  return query;
}

#pragma mark -
#pragma mark "tankrecord" methods
// These create a GTLQueryGasstats object.

+ (id)queryForTankrecordDeleteWithEntityKey:(NSString *)entityKey {
  NSString *methodName = @"gasstats.tankrecord.delete";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.entityKey = entityKey;
  query.expectedObjectClass = [GTLGasstatsTankRecord class];
  return query;
}

+ (id)queryForTankrecordInsertWithObject:(GTLGasstatsTankRecord *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gasstats.tankrecord.insert";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLGasstatsTankRecord class];
  return query;
}

+ (id)queryForTankrecordList {
  NSString *methodName = @"gasstats.tankrecord.list";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsTankRecordCollection class];
  return query;
}

#pragma mark -
#pragma mark "tankrecord.list.by" methods
// These create a GTLQueryGasstats object.

+ (id)queryForTankrecordListByCar {
  NSString *methodName = @"gasstats.tankrecord.list.by.car";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsTankRecordCollection class];
  return query;
}

#pragma mark -
#pragma mark "tankrecord.list.by.car" methods
// These create a GTLQueryGasstats object.

+ (id)queryForTankrecordListByCarUser {
  NSString *methodName = @"gasstats.tankrecord.list.by.car.user";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsTankRecordCollection class];
  return query;
}

#pragma mark -
#pragma mark "tankrecord.list.by" methods
// These create a GTLQueryGasstats object.

+ (id)queryForTankrecordListByUser {
  NSString *methodName = @"gasstats.tankrecord.list.by.user";
  GTLQueryGasstats *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLGasstatsTankRecordCollection class];
  return query;
}

@end
